version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - "4000:4000"
    depends_on:
      ml-service:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - ML_SERVICE_URL=http://ml-service:5000
    volumes:
      - ./ml-service/data:/app/ml-service/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  ml-service:
    build: ./ml-service
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./ml-service/data:/app/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 600s

networks:
  app-network:
    driver: bridge 